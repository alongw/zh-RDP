//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.directory
//     Template : Microsoft.Bond.Rules.dll#Java.tt
//     File     : Microsoft/Telemetry/Extensions/user.java
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package Microsoft.Telemetry.Extensions;


// [Description("Describes the User related fields. See https://osgwiki.com/wiki/CommonSchema/user_id")]
/**
* user
*/
@SuppressWarnings("all")
public class user extends Microsoft.Telemetry.Extension {
    // TODO: implement
    public com.microsoft.bond.BondSerializable clone() {return null;}

    //
    // Fields
    //

    // 10: Optional string id
    private String id;

    // 20: Optional string localId
    private String localId;

    // 30: Optional string authId
    private String authId;

    /**
     * @return current value of id property
     */
    public final String getId() {
        return this.id;
    }

    /**
     * @param value new value of id property
     */
    public final void setId(String value) {
        this.id = value;
    }

    /**
     * @return current value of localId property
     */
    public final String getLocalId() {
        return this.localId;
    }

    /**
     * @param value new value of localId property
     */
    public final void setLocalId(String value) {
        this.localId = value;
    }

    /**
     * @return current value of authId property
     */
    public final String getAuthId() {
        return this.authId;
    }

    /**
     * @param value new value of authId property
     */
    public final void setAuthId(String value) {
        this.authId = value;
    }

    /**
     * Schema metadata
     */
    public static class Schema {
        public static final com.microsoft.bond.SchemaDef schemaDef;
        public static final com.microsoft.bond.Metadata metadata;
        private static final com.microsoft.bond.Metadata id_metadata;
        private static final com.microsoft.bond.Metadata localId_metadata;
        private static final com.microsoft.bond.Metadata authId_metadata;

        static {
            metadata = new com.microsoft.bond.Metadata();
            metadata.setName("user");
            metadata.setQualified_name("Microsoft.Telemetry.Extensions.user");

            metadata.getAttributes().put("Description", "Describes the User related fields. See https://osgwiki.com/wiki/CommonSchema/user_id");

            // id
            id_metadata = new com.microsoft.bond.Metadata();
            id_metadata.setName("id");
            id_metadata.getAttributes().put("Description", "Unique user Id. Clients aren't expected to set this; instead the service will decide the best ID to use here. Clients may set this if they believe they have the best user ID already. Format is <NamespaceIdentifier>:<Id> for example, x:12345678.");

            // localId
            localId_metadata = new com.microsoft.bond.Metadata();
            localId_metadata.setName("localId");
            localId_metadata.getAttributes().put("Description", "Local user identifier according to the client. Format is <NamespaceIdentifier>:<Id> for example, x:12345678.");

            // authId
            authId_metadata = new com.microsoft.bond.Metadata();
            authId_metadata.setName("authId");
            authId_metadata.getAttributes().put("Description", "This is the ID of the user associated with this event, deduced from a token such as an MSA ticket or Xbox xtoken.");
            authId_metadata.getAttributes().put("Name", "UserAuthId");

            schemaDef = new com.microsoft.bond.SchemaDef();
            schemaDef.setRoot(getTypeDef(schemaDef));
        }

        public static com.microsoft.bond.TypeDef getTypeDef(com.microsoft.bond.SchemaDef schema)
        {
            com.microsoft.bond.TypeDef type = new com.microsoft.bond.TypeDef();
            type.setId(com.microsoft.bond.BondDataType.BT_STRUCT);
            type.setStruct_def(getStructDef(schema));
            return type;
        }

        private static short getStructDef(com.microsoft.bond.SchemaDef schema)
        {
            short pos;

            for(pos = 0; pos < schema.getStructs().size(); pos++)
            {
                if (schema.getStructs().get(pos).getMetadata() == metadata)
                {
                    return pos;
                }
            }

            com.microsoft.bond.StructDef structDef = new com.microsoft.bond.StructDef();
            schema.getStructs().add(structDef);

            structDef.setMetadata(metadata);
            structDef.setBase_def(Microsoft.Telemetry.Extension.Schema.getTypeDef(schema));

            com.microsoft.bond.FieldDef field;

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)10);
            field.setMetadata(id_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)20);
            field.setMetadata(localId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)30);
            field.setMetadata(authId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            return pos;
        }
    }

    /*
    * @see com.microsoft.bond.BondMirror#getField()
    */
    public Object getField(com.microsoft.bond.FieldDef fieldDef) {
        switch (fieldDef.getId()) {
            case (short)10:
                return this.id;
            case (short)20:
                return this.localId;
            case (short)30:
                return this.authId;
            default:
                return null;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#setField()
    */
    public void setField(com.microsoft.bond.FieldDef fieldDef, Object value) {
        switch (fieldDef.getId()) {
            case (short)10:
                this.id = (String)value;
                break;
            case (short)20:
                this.localId = (String)value;
                break;
            case (short)30:
                this.authId = (String)value;
                break;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#createInstance()
    */
    public com.microsoft.bond.BondMirror createInstance(com.microsoft.bond.StructDef structDef) {
        return null;
    }

    /*
     * @see com.microsoft.bond.BondMirror#getSchema()
     */
    public com.microsoft.bond.SchemaDef getSchema()
    {
        return getRuntimeSchema();
    }

    /**
     * Static method returning {@link SchemaDef} instance.
     */
    public static com.microsoft.bond.SchemaDef getRuntimeSchema()
    {
        return Schema.schemaDef;
    }


    // Constructor
    public user() {
        
    }

    /*
     * @see com.microsoft.bond.BondSerializable#reset()
     */
    public void reset() {
        reset("user", "Microsoft.Telemetry.Extensions.user");
    }

    protected void reset(String name, String qualifiedName) {
        super.reset(name, qualifiedName);
        this.id = "";
        this.localId = "";
        this.authId = "";
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, (com.microsoft.bond.SchemaDef)schema, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        reader.readBegin();
        readNested(reader);
        reader.readEnd();
    }

    /*
     * Called to read a struct that is contained inside another struct.
     */
    public void readNested(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        if (!reader.hasCapability(com.microsoft.bond.ProtocolCapability.TAGGED)) {
            readUntagged(reader, false);
        } else if (readTagged(reader, false)) {
            com.microsoft.bond.internal.ReadHelper.skipPartialStruct(reader);
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        // read(com.microsoft.bond.internal.ProtocolHelper.createReader(reader, schema));
    }

    protected void readUntagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = reader.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);

        reader.readStructBegin(isBase);
        super.readUntagged(reader, true);

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.id = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.localId = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.authId = reader.readString();
        }
        reader.readStructEnd();
    } // ReadUntagged()


    protected boolean readTagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean isPartial;
        reader.readStructBegin(isBase);

        if (!super.readTagged(reader, true))
        {
            return false;
        }

        while (true) {
            com.microsoft.bond.ProtocolReader.FieldTag fieldTag = reader.readFieldBegin();

            if (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP
             || fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE) {
                isPartial = (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE);
                break;
            }

            switch (fieldTag.id) {
                case 10:
                    this.id = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 20:
                    this.localId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 30:
                    this.authId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                default:
                    reader.skip(fieldTag.type);
                    break;
            }

            reader.readFieldEnd();
        }

        reader.readStructEnd();

        return isPartial;
    }


    /*
     * @see com.microsoft.bond.BondSerializable#marshal()
     */
    public void marshal(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.marshal(this, writer);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#write()
     */
    public void write(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        writer.writeBegin();
        com.microsoft.bond.ProtocolWriter firstPassWriter;
        if ((firstPassWriter = writer.getFirstPassWriter()) != null)
        {
            writeNested(firstPassWriter, false);
            writeNested(writer, false);
        }
        else
        {
          writeNested(writer, false);
        }
        writer.writeEnd();
    }

    public void writeNested(com.microsoft.bond.ProtocolWriter writer, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = writer.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);
        writer.writeStructBegin(Schema.metadata, isBase);
        super.writeNested(writer, true);

        if (!canOmitFields || (id != Schema.id_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 10, Schema.id_metadata);
            writer.writeString(id);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 10, Schema.id_metadata);
        }

        if (!canOmitFields || (localId != Schema.localId_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 20, Schema.localId_metadata);
            writer.writeString(localId);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 20, Schema.localId_metadata);
        }

        if (!canOmitFields || (authId != Schema.authId_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 30, Schema.authId_metadata);
            writer.writeString(authId);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 30, Schema.authId_metadata);
        }

        writer.writeStructEnd(isBase);
    } // writeNested


    public boolean memberwiseCompare(Object obj) {
        if (obj == null) {
            return false;
        }

        user that = (user)obj;

        return memberwiseCompareQuick(that) && memberwiseCompareDeep(that);
    }

    protected boolean memberwiseCompareQuick(user that) {
        boolean equals = true;
        equals = equals && super.memberwiseCompareQuick(that);
        equals = equals && ((this.id == null) == (that.id == null));
        equals = equals && (this.id == null ? true : (this.id.length() == that.id.length()));
        equals = equals && ((this.localId == null) == (that.localId == null));
        equals = equals && (this.localId == null ? true : (this.localId.length() == that.localId.length()));
        equals = equals && ((this.authId == null) == (that.authId == null));
        equals = equals && (this.authId == null ? true : (this.authId.length() == that.authId.length()));
        return equals;
    } // memberwiseCompareQuick

    protected boolean memberwiseCompareDeep(user that) {
        boolean equals = true;
        equals = equals && super.memberwiseCompareDeep(that);
        equals = equals && (this.id == null ? true : this.id.equals(that.id));
        equals = equals && (this.localId == null ? true : this.localId.equals(that.localId));
        equals = equals && (this.authId == null ? true : this.authId.equals(that.authId));
        return equals;
    } // memberwiseCompareDeep

}; // class user
