//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
// 
//     Tool     : bondc, Version=3.0.1, Build=bond-git.retail.directory
//     Template : Microsoft.Bond.Rules.dll#Java.tt
//     File     : Microsoft/Telemetry/Extensions/utc.java
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package Microsoft.Telemetry.Extensions;


// [Description("Describes the properties that might be populated by a logging library on Windows.")]
/**
* utc
*/
@SuppressWarnings("all")
public class utc extends Microsoft.Telemetry.Extension {
    // TODO: implement
    public com.microsoft.bond.BondSerializable clone() {return null;}

    //
    // Fields
    //

    // 10: Optional string stId
    private String stId;

    // 20: Optional string aId
    private String aId;

    // 30: Optional string raId
    private String raId;

    // 40: Optional string op
    private String op;

    // 50: Optional int64 cat
    private long cat;

    // 60: Optional int64 flags
    private long flags;

    // 70: Optional string sqmId
    private String sqmId;

    /**
     * @return current value of stId property
     */
    public final String getStId() {
        return this.stId;
    }

    /**
     * @param value new value of stId property
     */
    public final void setStId(String value) {
        this.stId = value;
    }

    /**
     * @return current value of aId property
     */
    public final String getAId() {
        return this.aId;
    }

    /**
     * @param value new value of aId property
     */
    public final void setAId(String value) {
        this.aId = value;
    }

    /**
     * @return current value of raId property
     */
    public final String getRaId() {
        return this.raId;
    }

    /**
     * @param value new value of raId property
     */
    public final void setRaId(String value) {
        this.raId = value;
    }

    /**
     * @return current value of op property
     */
    public final String getOp() {
        return this.op;
    }

    /**
     * @param value new value of op property
     */
    public final void setOp(String value) {
        this.op = value;
    }

    /**
     * @return current value of cat property
     */
    public final long getCat() {
        return this.cat;
    }

    /**
     * @param value new value of cat property
     */
    public final void setCat(long value) {
        this.cat = value;
    }

    /**
     * @return current value of flags property
     */
    public final long getFlags() {
        return this.flags;
    }

    /**
     * @param value new value of flags property
     */
    public final void setFlags(long value) {
        this.flags = value;
    }

    /**
     * @return current value of sqmId property
     */
    public final String getSqmId() {
        return this.sqmId;
    }

    /**
     * @param value new value of sqmId property
     */
    public final void setSqmId(String value) {
        this.sqmId = value;
    }

    /**
     * Schema metadata
     */
    public static class Schema {
        public static final com.microsoft.bond.SchemaDef schemaDef;
        public static final com.microsoft.bond.Metadata metadata;
        private static final com.microsoft.bond.Metadata stId_metadata;
        private static final com.microsoft.bond.Metadata aId_metadata;
        private static final com.microsoft.bond.Metadata raId_metadata;
        private static final com.microsoft.bond.Metadata op_metadata;
        private static final com.microsoft.bond.Metadata cat_metadata;
        private static final com.microsoft.bond.Metadata flags_metadata;
        private static final com.microsoft.bond.Metadata sqmId_metadata;

        static {
            metadata = new com.microsoft.bond.Metadata();
            metadata.setName("utc");
            metadata.setQualified_name("Microsoft.Telemetry.Extensions.utc");

            metadata.getAttributes().put("Description", "Describes the properties that might be populated by a logging library on Windows.");

            // stId
            stId_metadata = new com.microsoft.bond.Metadata();
            stId_metadata.setName("stId");
            stId_metadata.getAttributes().put("Description", "Used for UTC scenarios.");

            // aId
            aId_metadata = new com.microsoft.bond.Metadata();
            aId_metadata.setName("aId");
            aId_metadata.getAttributes().put("Description", "Activity Id in ETW (event tracing for windows).");

            // raId
            raId_metadata = new com.microsoft.bond.Metadata();
            raId_metadata.setName("raId");
            raId_metadata.getAttributes().put("Description", "Related Activity Id in ETW.");

            // op
            op_metadata = new com.microsoft.bond.Metadata();
            op_metadata.setName("op");
            op_metadata.getAttributes().put("Description", "Op Code in ETW.");

            // cat
            cat_metadata = new com.microsoft.bond.Metadata();
            cat_metadata.setName("cat");
            cat_metadata.getAttributes().put("Description", "Categories.");
            cat_metadata.getDefault_value().setInt_value(0L);

            // flags
            flags_metadata = new com.microsoft.bond.Metadata();
            flags_metadata.setName("flags");
            flags_metadata.getAttributes().put("Description", "This captures the characteristics of the traffic. Examples: isTest, isInternal.");
            flags_metadata.getDefault_value().setInt_value(0L);

            // sqmId
            sqmId_metadata = new com.microsoft.bond.Metadata();
            sqmId_metadata.setName("sqmId");
            sqmId_metadata.getAttributes().put("Description", "The Windows SQM device ID.");

            schemaDef = new com.microsoft.bond.SchemaDef();
            schemaDef.setRoot(getTypeDef(schemaDef));
        }

        public static com.microsoft.bond.TypeDef getTypeDef(com.microsoft.bond.SchemaDef schema)
        {
            com.microsoft.bond.TypeDef type = new com.microsoft.bond.TypeDef();
            type.setId(com.microsoft.bond.BondDataType.BT_STRUCT);
            type.setStruct_def(getStructDef(schema));
            return type;
        }

        private static short getStructDef(com.microsoft.bond.SchemaDef schema)
        {
            short pos;

            for(pos = 0; pos < schema.getStructs().size(); pos++)
            {
                if (schema.getStructs().get(pos).getMetadata() == metadata)
                {
                    return pos;
                }
            }

            com.microsoft.bond.StructDef structDef = new com.microsoft.bond.StructDef();
            schema.getStructs().add(structDef);

            structDef.setMetadata(metadata);
            structDef.setBase_def(Microsoft.Telemetry.Extension.Schema.getTypeDef(schema));

            com.microsoft.bond.FieldDef field;

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)10);
            field.setMetadata(stId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)20);
            field.setMetadata(aId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)30);
            field.setMetadata(raId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)40);
            field.setMetadata(op_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)50);
            field.setMetadata(cat_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_INT64);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)60);
            field.setMetadata(flags_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_INT64);
            structDef.getFields().add(field);

            field = new com.microsoft.bond.FieldDef();
            field.setId((short)70);
            field.setMetadata(sqmId_metadata);
            field.getType().setId(com.microsoft.bond.BondDataType.BT_STRING);
            structDef.getFields().add(field);

            return pos;
        }
    }

    /*
    * @see com.microsoft.bond.BondMirror#getField()
    */
    public Object getField(com.microsoft.bond.FieldDef fieldDef) {
        switch (fieldDef.getId()) {
            case (short)10:
                return this.stId;
            case (short)20:
                return this.aId;
            case (short)30:
                return this.raId;
            case (short)40:
                return this.op;
            case (short)50:
                return this.cat;
            case (short)60:
                return this.flags;
            case (short)70:
                return this.sqmId;
            default:
                return null;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#setField()
    */
    public void setField(com.microsoft.bond.FieldDef fieldDef, Object value) {
        switch (fieldDef.getId()) {
            case (short)10:
                this.stId = (String)value;
                break;
            case (short)20:
                this.aId = (String)value;
                break;
            case (short)30:
                this.raId = (String)value;
                break;
            case (short)40:
                this.op = (String)value;
                break;
            case (short)50:
                this.cat = (Long)value;
                break;
            case (short)60:
                this.flags = (Long)value;
                break;
            case (short)70:
                this.sqmId = (String)value;
                break;
        }
    }


    /*
    * @see com.microsoft.bond.BondMirror#createInstance()
    */
    public com.microsoft.bond.BondMirror createInstance(com.microsoft.bond.StructDef structDef) {
        return null;
    }

    /*
     * @see com.microsoft.bond.BondMirror#getSchema()
     */
    public com.microsoft.bond.SchemaDef getSchema()
    {
        return getRuntimeSchema();
    }

    /**
     * Static method returning {@link SchemaDef} instance.
     */
    public static com.microsoft.bond.SchemaDef getRuntimeSchema()
    {
        return Schema.schemaDef;
    }


    // Constructor
    public utc() {
        
    }

    /*
     * @see com.microsoft.bond.BondSerializable#reset()
     */
    public void reset() {
        reset("utc", "Microsoft.Telemetry.Extensions.utc");
    }

    protected void reset(String name, String qualifiedName) {
        super.reset(name, qualifiedName);
        this.stId = "";
        this.aId = "";
        this.raId = "";
        this.op = "";
        this.cat = 0L;
        this.flags = 0L;
        this.sqmId = "";
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#unmarshal()
     */
    public void unmarshal(java.io.InputStream input, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.unmarshal(input, (com.microsoft.bond.SchemaDef)schema, this);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        reader.readBegin();
        readNested(reader);
        reader.readEnd();
    }

    /*
     * Called to read a struct that is contained inside another struct.
     */
    public void readNested(com.microsoft.bond.ProtocolReader reader) throws java.io.IOException {
        if (!reader.hasCapability(com.microsoft.bond.ProtocolCapability.TAGGED)) {
            readUntagged(reader, false);
        } else if (readTagged(reader, false)) {
            com.microsoft.bond.internal.ReadHelper.skipPartialStruct(reader);
        }
    }

    /*
     * @see com.microsoft.bond.BondSerializable#read()
     */
    public void read(com.microsoft.bond.ProtocolReader reader, com.microsoft.bond.BondSerializable schema) throws java.io.IOException {
        // read(com.microsoft.bond.internal.ProtocolHelper.createReader(reader, schema));
    }

    protected void readUntagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = reader.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);

        reader.readStructBegin(isBase);
        super.readUntagged(reader, true);

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.stId = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.aId = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.raId = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.op = reader.readString();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.cat = reader.readInt64();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.flags = reader.readInt64();
        }

        if (!canOmitFields || !reader.readFieldOmitted()) {
            this.sqmId = reader.readString();
        }
        reader.readStructEnd();
    } // ReadUntagged()


    protected boolean readTagged(com.microsoft.bond.ProtocolReader reader, boolean isBase) throws java.io.IOException {
        boolean isPartial;
        reader.readStructBegin(isBase);

        if (!super.readTagged(reader, true))
        {
            return false;
        }

        while (true) {
            com.microsoft.bond.ProtocolReader.FieldTag fieldTag = reader.readFieldBegin();

            if (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP
             || fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE) {
                isPartial = (fieldTag.type == com.microsoft.bond.BondDataType.BT_STOP_BASE);
                break;
            }

            switch (fieldTag.id) {
                case 10:
                    this.stId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 20:
                    this.aId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 30:
                    this.raId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 40:
                    this.op = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                case 50:
                    this.cat = com.microsoft.bond.internal.ReadHelper.readInt64(reader, fieldTag.type);
                    break;
                case 60:
                    this.flags = com.microsoft.bond.internal.ReadHelper.readInt64(reader, fieldTag.type);
                    break;
                case 70:
                    this.sqmId = com.microsoft.bond.internal.ReadHelper.readString(reader, fieldTag.type);
                    break;
                default:
                    reader.skip(fieldTag.type);
                    break;
            }

            reader.readFieldEnd();
        }

        reader.readStructEnd();

        return isPartial;
    }


    /*
     * @see com.microsoft.bond.BondSerializable#marshal()
     */
    public void marshal(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        com.microsoft.bond.internal.Marshaler.marshal(this, writer);
    }

    /*
     * @see com.microsoft.bond.BondSerializable#write()
     */
    public void write(com.microsoft.bond.ProtocolWriter writer) throws java.io.IOException {
        writer.writeBegin();
        com.microsoft.bond.ProtocolWriter firstPassWriter;
        if ((firstPassWriter = writer.getFirstPassWriter()) != null)
        {
            writeNested(firstPassWriter, false);
            writeNested(writer, false);
        }
        else
        {
          writeNested(writer, false);
        }
        writer.writeEnd();
    }

    public void writeNested(com.microsoft.bond.ProtocolWriter writer, boolean isBase) throws java.io.IOException {
        boolean canOmitFields = writer.hasCapability(com.microsoft.bond.ProtocolCapability.CAN_OMIT_FIELDS);
        writer.writeStructBegin(Schema.metadata, isBase);
        super.writeNested(writer, true);

        if (!canOmitFields || (stId != Schema.stId_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 10, Schema.stId_metadata);
            writer.writeString(stId);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 10, Schema.stId_metadata);
        }

        if (!canOmitFields || (aId != Schema.aId_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 20, Schema.aId_metadata);
            writer.writeString(aId);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 20, Schema.aId_metadata);
        }

        if (!canOmitFields || (raId != Schema.raId_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 30, Schema.raId_metadata);
            writer.writeString(raId);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 30, Schema.raId_metadata);
        }

        if (!canOmitFields || (op != Schema.op_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 40, Schema.op_metadata);
            writer.writeString(op);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 40, Schema.op_metadata);
        }

        if (!canOmitFields || (cat != Schema.cat_metadata.getDefault_value().getInt_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_INT64, 50, Schema.cat_metadata);
            writer.writeInt64(cat);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_INT64, 50, Schema.cat_metadata);
        }

        if (!canOmitFields || (flags != Schema.flags_metadata.getDefault_value().getInt_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_INT64, 60, Schema.flags_metadata);
            writer.writeInt64(flags);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_INT64, 60, Schema.flags_metadata);
        }

        if (!canOmitFields || (sqmId != Schema.sqmId_metadata.getDefault_value().getString_value())) {
            writer.writeFieldBegin(com.microsoft.bond.BondDataType.BT_STRING, 70, Schema.sqmId_metadata);
            writer.writeString(sqmId);
            writer.writeFieldEnd();
        } else {
            writer.writeFieldOmitted(com.microsoft.bond.BondDataType.BT_STRING, 70, Schema.sqmId_metadata);
        }

        writer.writeStructEnd(isBase);
    } // writeNested


    public boolean memberwiseCompare(Object obj) {
        if (obj == null) {
            return false;
        }

        utc that = (utc)obj;

        return memberwiseCompareQuick(that) && memberwiseCompareDeep(that);
    }

    protected boolean memberwiseCompareQuick(utc that) {
        boolean equals = true;
        equals = equals && super.memberwiseCompareQuick(that);
        equals = equals && ((this.stId == null) == (that.stId == null));
        equals = equals && (this.stId == null ? true : (this.stId.length() == that.stId.length()));
        equals = equals && ((this.aId == null) == (that.aId == null));
        equals = equals && (this.aId == null ? true : (this.aId.length() == that.aId.length()));
        equals = equals && ((this.raId == null) == (that.raId == null));
        equals = equals && (this.raId == null ? true : (this.raId.length() == that.raId.length()));
        equals = equals && ((this.op == null) == (that.op == null));
        equals = equals && (this.op == null ? true : (this.op.length() == that.op.length()));
        equals = equals && (this.cat == that.cat);
        equals = equals && (this.flags == that.flags);
        equals = equals && ((this.sqmId == null) == (that.sqmId == null));
        equals = equals && (this.sqmId == null ? true : (this.sqmId.length() == that.sqmId.length()));
        return equals;
    } // memberwiseCompareQuick

    protected boolean memberwiseCompareDeep(utc that) {
        boolean equals = true;
        equals = equals && super.memberwiseCompareDeep(that);
        equals = equals && (this.stId == null ? true : this.stId.equals(that.stId));
        equals = equals && (this.aId == null ? true : this.aId.equals(that.aId));
        equals = equals && (this.raId == null ? true : this.raId.equals(that.raId));
        equals = equals && (this.op == null ? true : this.op.equals(that.op));
        equals = equals && (this.sqmId == null ? true : this.sqmId.equals(that.sqmId));
        return equals;
    } // memberwiseCompareDeep

}; // class utc
